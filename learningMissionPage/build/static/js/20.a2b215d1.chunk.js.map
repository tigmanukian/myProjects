{"version":3,"file":"static/js/20.a2b215d1.chunk.js","mappings":"wIAAA,IAAMA,EAAY,2C,kGC+HlB,UAxHiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8CF,EAAAA,EAAAA,UAAS,IAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KAyCA,OACE,8BACE,gBAAKC,UAAU,kEAAf,UACE,gBAAKA,UAAU,YAAf,UACE,gBAAKA,UAAU,6DAAf,UACE,gBAAKA,UAAU,oCAAf,UACE,gBAAKA,UAAU,OAAOC,MAAO,CAAEC,aAAc,GAAIC,UAAW,QAA5D,UACE,iBAAKH,UAAU,8BAAf,WACE,eAAIA,UAAU,OAAd,yBACA,eAAIA,UAAU,sBAAd,uBACA,eAAIA,UAAU,OAAd,kCACA,kBAAMI,SAlDD,SAACC,GACpBA,EAAMC,iBACND,EAAME,kBACN,IAAMC,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOlB,EACPmB,SAAUvB,EACVwB,gBAAiBtB,KAGjBF,IAAaE,EAIjBuB,MAAM,GAAD,OAAI7B,EAAAA,EAAJ,sBAAmCoB,GACrCU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IAAKA,IAAWA,EAAOC,MAGrB,OAFAvB,EAAS,4CACTH,EAASK,MAAM,CAACC,aAAa,QAG/BqB,aAAaC,QAAQ,QAASH,EAAOC,OACrCC,aAAaC,QAAQ,SAASH,EAAOI,QACrC1B,EAAS,IACTV,EAAS,kBAAmB,CAAEqC,SAAS,OAGxCC,OAAM,SAAC7B,GAEN8B,QAAQ9B,MAAM,SAAUA,MAnB1BC,EAAS,2BAmCG,WAEE,iBAAKC,UAAU,oBAAf,WACE,kBAAOA,UAAU,aAAa6B,QAAQ,kBAAtC,oBAGA,kBAAO7B,UAAqB,wCAAVF,EAAiD,4CAA4C,+BAC7GgC,UAAW,GACXC,KAAK,QACLC,GAAG,kBACHC,YAAY,mBACZC,MAAOtC,EACPuC,SAAU,SAACC,GAAD,OAASvC,EAAYuC,EAAIC,OAAOH,UAEhC,wCAAVpC,GAAmD,eAAGG,MAAO,CAAEqC,MAAO,MAAMC,UAAU,QAAnC,UAA6CzC,GAAM,cAAG0C,KAAK,WAAUvC,MAAO,CAAEqC,MAAO,SAAlC,oBAAnD,WAAuH,SAE9K,iBAAKtC,UAAU,oBAAf,WACE,kBAAOA,UAAU,aAAa6B,QAAQ,kBAAtC,uBAGA,kBACEE,KAAK,WACLC,GAAG,kBACHC,YAAY,sBACZjC,UAAqB,2BAAVF,EAAoC,4CAA4C,+BAC3FoC,MAAO1C,EACP2C,SAAU,SAACC,GAAD,OAAS3C,EAAY2C,EAAIC,OAAOH,cAI9C,iBAAKlC,UAAU,oBAAf,WACE,kBAAOA,UAAU,aAAa6B,QAAQ,kBAAtC,+BAGA,kBACEE,KAAK,WACLC,GAAG,kBACHC,YAAY,mBACZjC,UAAqB,2BAAVF,EAAoC,4CAA4C,+BAC3FoC,MAAOxC,EACPyC,SAAU,SAACC,GAAD,OAASzC,EAAmByC,EAAIC,OAAOH,UAExC,2BAAVpC,GAAsC,cAAGG,MAAO,CAAEqC,MAAO,MAAMC,UAAU,QAAnC,SAA6CzC,IAAc,SAEpG,gBAAKE,UAAU,gCAAf,UACE,mBACE+B,KAAK,SACL/B,UAAU,yCAFZ,kD","sources":["Settings.js","register/Register.js"],"sourcesContent":["const urlPrefix = \"https://api.learningmissionlabs.com/api\";\r\nexport {urlPrefix};","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {urlPrefix} from \"../Settings\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../default.css\"\r\n\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        Email: username,\r\n        Password: password,\r\n        ConfirmPassword: confirmPassword,\r\n      })\r\n    };\r\n    if (password !== confirmPassword) {\r\n      setError(\"Password doesn't match\");\r\n      return;\r\n    }\r\n    fetch(`${urlPrefix}/User/registration`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (!result || !result.token) {\r\n          setError(\"Email address already exists. Go to\");\r\n          username.style={borderRadius:\"red\"}\r\n          return;\r\n        }\r\n        localStorage.setItem(\"token\", result.token)\r\n        localStorage.setItem(\"status\",result.status )\r\n        setError(\"\");\r\n        navigate(\"../registerInfo\", { replace: true });\r\n        // TODO: route to another url\r\n      })\r\n      .catch((error) => {\r\n\r\n        console.error('Error:', error);\r\n        // responseData = {};\r\n      });\r\n  };\r\n  \r\n  return (\r\n    <section>\r\n      <div className=\"mask d-flex flex-row align-items-center h-100 gradient-custom-3\">\r\n        <div className=\"container\">\r\n          <div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n            <div className=\"col-12 col-md-9 col-lg-7 col-xl-6\">\r\n              <div className=\"card\" style={{ borderRadius: 15, marginTop: \"50px\" }}>\r\n                <div className=\"card-body p-5 card_register\">\r\n                  <h5 className=\"mb-2\">STEP 01/03</h5>\r\n                  <h2 className=\"text-uppercase mb-1\">Register</h2>\r\n                  <h4 className=\"mb-5\">Create Your Account</h4>\r\n                  <form onSubmit={handleSubmit}>\r\n                   \r\n                    <div className=\"form-outline mb-4\">\r\n                      <label className=\"form-label\" htmlFor=\"form3Example1cg\">\r\n                        Email\r\n                      </label>\r\n                      <input className={error === \"Email address already exists. Go to\" ?'validationcl form-control form-control-lg':'form-control form-control-lg'}\r\n                        maxLength={50}\r\n                        type=\"email\"\r\n                        id=\"form3Example1cg\"\r\n                        placeholder=\"Enter Your Email\"                       \r\n                        value={username}\r\n                        onChange={(evt) => setUsername(evt.target.value)}\r\n                      />\r\n                       {error === \"Email address already exists. Go to\" ? (<p style={{ color: \"red\",textAlign:\"left\"}}>{error}<a href=\"../login\"style={{ color: \"black\",}}> Login</a> page</p>) : null}\r\n                    </div>\r\n                    <div className=\"form-outline mb-4\">\r\n                      <label className=\"form-label\" htmlFor=\"form3Example3cg\">\r\n                        Password\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        id=\"form3Example3cg\"\r\n                        placeholder=\"Enter Your Password\"\r\n                        className={error === \"Password doesn't match\" ?'validationcl form-control form-control-lg':'form-control form-control-lg'}\r\n                        value={password}\r\n                        onChange={(evt) => setPassword(evt.target.value)}\r\n                      />\r\n                       \r\n                    </div>\r\n                    <div className=\"form-outline mb-4\">\r\n                      <label className=\"form-label\" htmlFor=\"form3Example4cg\">\r\n                        Confirm Password\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        id=\"form3Example4cg\"\r\n                        placeholder=\"Confirm Password\"\r\n                        className={error === \"Password doesn't match\" ?'validationcl form-control form-control-lg':'form-control form-control-lg'}\r\n                        value={confirmPassword}\r\n                        onChange={(evt) => setConfirmPassword(evt.target.value)}\r\n                      />\r\n                      {error === \"Password doesn't match\" ? (<p style={{ color: \"red\",textAlign:\"left\"}}>{error}</p>) : null}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-block btn-lg gradient-custom-4\"\r\n                      >\r\n                        Create Account\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n  )\r\n};\r\nexport default Register;"],"names":["urlPrefix","navigate","useNavigate","useState","password","setPassword","confirmPassword","setConfirmPassword","username","setUsername","error","setError","className","style","borderRadius","marginTop","onSubmit","event","preventDefault","stopPropagation","requestOptions","method","headers","body","JSON","stringify","Email","Password","ConfirmPassword","fetch","then","response","json","result","token","localStorage","setItem","status","replace","catch","console","htmlFor","maxLength","type","id","placeholder","value","onChange","evt","target","color","textAlign","href"],"sourceRoot":""}